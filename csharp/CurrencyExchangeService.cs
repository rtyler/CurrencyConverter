// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 1.1.4322.2032
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

// 
// This source code was auto-generated by Mono Web Services Description Language Utility
//
namespace Bleep
{

/// <remarks/>
/// <remarks>
///Returns the exchange rate between the two currencies
///</remarks>
[System.Web.Services.WebServiceBinding(Name="CurrencyExchangePort", Namespace="http://www.xmethods.net/sd/CurrencyExchangeService.wsdl")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public class CurrencyExchangeService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    public CurrencyExchangeService() {
        this.Url = "http://services.xmethods.net:80/soap";
    }
    
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:xmethods-CurrencyExchange", ResponseNamespace="urn:xmethods-CurrencyExchange")]
    [return: System.Xml.Serialization.SoapElement("Result")]
    public System.Single getRate(string country1, string country2) {
        object[] results = this.Invoke("getRate", new object[] {
            country1,
            country2});
        return ((System.Single)(results[0]));
    }
    
    public System.IAsyncResult BegingetRate(string country1, string country2, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getRate", new object[] {
            country1,
            country2}, callback, asyncState);
    }
    
    public System.Single EndgetRate(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Single)(results[0]));
    }
}

}